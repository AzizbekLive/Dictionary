package uz.gita.dictionaryimport android.content.Contextimport android.os.Bundleimport android.os.Handlerimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.view.WindowManagerimport androidx.fragment.app.Fragmentimport uz.gita.dictionary.adapter.Adapterimport uz.gita.dictionary.adapter.startFragmentimport uz.gita.dictionary.database.DictionaryDataBaseimport uz.gita.dictionary.databinding.HomeScreenBindingclass HomeScreen : Fragment(R.layout.home_screen) {    private lateinit var binding: HomeScreenBinding    private lateinit var adapter: Adapter    private lateinit var contex: Context    private lateinit var handle: Handler    private lateinit var db: DictionaryDataBase    override fun onCreateView(        inflater: LayoutInflater,        container: ViewGroup?,        savedInstanceState: Bundle?,    ): View {        binding = HomeScreenBinding.inflate(inflater, container, false)        if (container != null) {            contex = container.context        }        val window = requireActivity().window        window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS)        window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS)        window.statusBarColor = this.resources.getColor(R.color.mainbg)        return binding.root    }    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {        adapter = Adapter()        db = DictionaryDataBase(contex)        initAdapter()        onClik()    }    private fun initAdapter() {        binding.resacilview.adapter = adapter        adapter.setCursor(db.getAllWords())        adapter.setOnFavClickListener { id, value, position ->            db.updateWords(id, value)            adapter.setCursor(db.getAllWords())            adapter.notifyItemChanged(position)        }    }    fun onClik() {        adapter.setInfoPosition { positoin ->            val bundle = Bundle()            val fragment = InfoScreen()            fragment.arguments = bundle            bundle.putSerializable("uzbek", positoin)            startFragment(fragment)        }    }}